"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-github-calendar";
exports.ids = ["vendor-chunks/react-github-calendar"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-github-calendar/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-github-calendar/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar Calendar = __webpack_require__(/*! react-activity-calendar */ \"(ssr)/./node_modules/react-activity-calendar/build/index.js\");\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : {\n        default: e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefault(React);\nvar Calendar__default = /*#__PURE__*/ _interopDefault(Calendar);\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nconst API_URL = \"https://github-contributions-api.jogruber.de/v4/\";\n// GitHub theme\nconst DEFAULT_THEME = {\n    light: [\n        \"#ebedf0\",\n        \"#9be9a8\",\n        \"#40c463\",\n        \"#30a14e\",\n        \"#216e39\"\n    ],\n    dark: [\n        \"#161b22\",\n        \"#0e4429\",\n        \"#006d32\",\n        \"#26a641\",\n        \"#39d353\"\n    ]\n};\nconst transformData = (data, transformFn)=>{\n    if (typeof transformFn !== \"function\") {\n        return data;\n    }\n    const transformedData = transformFn(data);\n    if (!Array.isArray(transformedData)) {\n        throw Error(`Passed function transformData must return a list of Day objects.`);\n    }\n    if (transformedData.length > 0) {\n        const testObj = transformedData[0];\n        if (typeof testObj.count !== \"number\" || testObj.count < 0) {\n            throw Error(`Required property \"count: number\" missing or invalid. Got: ${testObj.count}`);\n        }\n        if (!/\\d{4}-\\d{2}-\\d{2}/.test(testObj.date)) {\n            throw Error(`Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`);\n        }\n        if (typeof testObj.level !== \"number\" || testObj.level < 0 || testObj.level > 4) {\n            throw Error(`Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`);\n        }\n    }\n    return transformedData;\n};\nasync function fetchCalendarData(username, year) {\n    const response = await fetch(`${API_URL}${username}?y=${year}`);\n    const data = await response.json();\n    if (!response.ok) {\n        throw Error(`Fetching GitHub contribution data for \"${username}\" failed: ${data.error}`);\n    }\n    return data;\n}\nconst GitHubCalendar = ({ username, year = \"last\", labels, transformData: transformFn, transformTotalCount = true, throwOnError = false, errorMessage = `Error â€“ Fetching GitHub contribution data for \"${username}\" failed.`, ...props })=>{\n    const [data, setData] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const fetchData = React.useCallback(()=>{\n        setLoading(true);\n        setError(null);\n        fetchCalendarData(username, year).then(setData).catch(setError).finally(()=>setLoading(false));\n    }, [\n        username,\n        year\n    ]);\n    React.useEffect(fetchData, [\n        fetchData\n    ]);\n    // React error boundaries can't handle asynchronous code, so rethrow.\n    if (error) {\n        if (throwOnError) {\n            throw error;\n        } else {\n            return /*#__PURE__*/ React__default.default.createElement(\"div\", null, errorMessage);\n        }\n    }\n    if (loading || !data) {\n        return /*#__PURE__*/ React__default.default.createElement(Calendar.Skeleton, _extends({}, props, {\n            loading: true\n        }));\n    }\n    const theme = props.theme ?? DEFAULT_THEME;\n    const defaultLabels = {\n        totalCount: `{{count}} contributions in ${year === \"last\" ? \"the last year\" : \"{{year}}\"}`\n    };\n    const totalCount = year === \"last\" ? data.total[\"lastYear\"] : data.total[year];\n    return /*#__PURE__*/ React__default.default.createElement(Calendar__default.default, _extends({\n        data: transformData(data.contributions, transformFn),\n        theme: theme,\n        labels: Object.assign({}, defaultLabels, labels),\n        totalCount: transformFn && transformTotalCount ? undefined : totalCount\n    }, props, {\n        loading: Boolean(props.loading) || loading,\n        maxLevel: 4\n    }));\n};\nexports[\"default\"] = GitHubCalendar; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-github-calendar/build/index.js\n");

/***/ })

};
;